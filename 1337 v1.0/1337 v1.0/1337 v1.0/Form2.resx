<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label1.Text" xml:space="preserve">
    <value>* Port Scanner
   - Port Scanner
      Port Scanner scans for open ports.

* File Pumper
   - File Pumper
      Changes the size of files.
   - Get Website's IP
      Gets the IP of a website.
   - Enable&amp;Disable Firewall
       Enables and disables firewall.

* Fun
   - CD Tray
      Opens and closes the CD.
   - Ping
      Pings an IP.
   - Google Engine
      Search for an object on Google.</value>
  </data>
  <data name="Label2.Text" xml:space="preserve">
    <value>* Computer Information
    - Computer Informations
       Gets all the informations about your computer.

* Screen capture
     - Screen Capture
         Make a screenshot of your desktop and save it if you want to.

* Gmail bomber
     - Gmail Bomber
         Bombs gmail adresses. Requires gmail account.

* Misc
    - File Info Grabber
       Grabs informations for files.
    - Internet Check
       Check if you are connected to the Internet or not.

* Deface Page Gen
    - Deface Page Generator
        Generates you a defacement page!</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CADgAQAA8AMSAPgH9AD//wgA//8AAP//EgA=
</value>
  </data>
</root>